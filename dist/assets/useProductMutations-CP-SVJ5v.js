import{n as f,a5 as h,a3 as F,E as P,z as p,G as c}from"./index-CUSVstqU.js";class w{async createProduct(s){return(await f.post("/products",s)).data}async saveDraft(s){return(await f.post("/products/draft",s)).data}async updateDraft(s,r){return(await f.patch(`/products/${s}`,{...r,status:"draft"})).data}async updateProduct(s,r){return(await f.put(`/products/${s}`,r)).data}async getProducts(s){return(await f.get("/products",{params:s})).data}async getProductBySlug(s){return console.log("slug",s),(await f.get(`/products/${s}`)).data}async getProductById(s){return(await f.get(`/products/id/${s}`)).data}async deleteProduct(s){return(await f.delete(`/products/${s}`)).data}async toggleProductStatus(s,r){return(await f.patch(`/products/${s}/status`,{status:r})).data}async updateProductStock(s,r){return(await f.patch(`/products/${s}/stock`,r)).data}async uploadProductImages(s){const r=s.map(d=>h.uploadFile(d));return(await Promise.all(r)).map(d=>d.data.url)}async getRelatedProducts(s,r=8){return(await f.get(`/products/${s}/related?limit=${r}`)).data}}const g=new w,m=["products"],b=t=>["product",t];function D(){return P({mutationFn:async t=>{let s=[];t.imageFiles&&t.imageFiles.length>0&&(s=await Promise.all(t.imageFiles.map(e=>g.uploadProductImages([e]).then(l=>l[0]).catch(l=>{throw console.error("Failed to upload product image:",l),p.error("Failed to upload product image"),l}))));let r=t.variants;if(t.variantFiles&&t.variantFiles.length>0&&r){const e=new Map;for(const l of t.variantFiles)if(l.files.length>0)try{console.log("Uploading images for variant at index:",l.variantIndex);const a=await g.uploadProductImages(l.files);e.set(l.variantIndex,a)}catch(a){throw console.error("Failed to upload variant images:",a),p.error("Failed to upload variant images"),a}r=r.map((l,a)=>{const i=e.get(a);return i?(console.log(`Adding ${i.length} images to variant at index ${a}`),{...l,images:i}):l})}const{imageFiles:o,variantFiles:d,...u}=t,v={...u,price:Number(u.price),quantity:Number(u.quantity),shippingPrice:u.shippingPrice?Number(u.shippingPrice):void 0,discount:u.discount?{discountType:u.discount.discountType||"none",discountValue:u.discount.discountValue?Number(u.discount.discountValue):void 0}:{discountType:"none"},variants:r?.map(e=>({...e,price:Number(e.price),quantity:Number(e.quantity),discount:e.discount?{discountType:e.discount.discountType||"none",discountValue:e.discount.discountValue?Number(e.discount.discountValue):void 0}:void 0})),images:s};return await g.createProduct(v)},onSuccess:t=>{c.invalidateQueries({queryKey:m}),p.success(t.message||"Product created successfully")},onError:t=>{const s=t.response?.data?.message||"Failed to create product";p.error(s),console.error("Create product error:",t)}})}function q(){return P({mutationFn:async({id:t,data:s})=>{let r=s.existingImages||[];if(s.imageFiles&&s.imageFiles.length>0)try{const a=await g.uploadProductImages(s.imageFiles);r=[...r,...a]}catch(a){throw console.error("Failed to upload product images:",a),p.error("Failed to upload product images"),a}let o=s.variants;if(s.variantFiles&&s.variantFiles.length>0&&o){const a=new Map;for(const i of s.variantFiles)if(i.files.length>0)try{const n=await g.uploadProductImages(i.files);i.variantIndex!==void 0?a.set(i.variantIndex,n):o=o.map(y=>y.color===i.variantId?{...y,images:[...y.images||[],...n]}:y)}catch(n){throw console.error("Failed to upload variant images:",n),p.error("Failed to upload variant images"),n}a.size>0&&(o=o.map((i,n)=>{const y=a.get(n);return y?{...i,images:[...i.images||[],...y]}:i}))}const{imageFiles:d,variantFiles:u,existingImages:v,...e}=s,l={...e,price:e.price!==void 0?Number(e.price):void 0,quantity:e.quantity!==void 0?Number(e.quantity):void 0,outOfStock:e.outOfStock,deliveryDistance:e.deliveryDistance!==void 0?Number(e.deliveryDistance):void 0,shippingPrice:e.shippingPrice?Number(e.shippingPrice):void 0,discount:e.discount?{...e.discount,discountValue:e.discount.discountValue?Number(e.discount.discountValue):void 0}:void 0,variants:o?.map(a=>{const i=a.discount||{discountType:"none",discountValue:void 0},n=i?.discountValue||"",y=i.discountType!=="none"&&n!==void 0&&n!==null&&n!==""&&(typeof n=="string"?n?.trim()!=="":Number(n)>0);return{...a,price:Number(a.price),quantity:Number(a.quantity),outOfStock:a.outOfStock||!1,discount:y?{discountType:i.discountType,discountValue:Number(n)}:{discountType:"none",discountValue:void 0}}}),images:r};return await g.updateProduct(t,l)},onSuccess:(t,s)=>{c.invalidateQueries({queryKey:m}),c.invalidateQueries({queryKey:["product"]}),c.invalidateQueries({queryKey:["product","id",s.id]}),p.success(t.message||"Product updated successfully")},onError:t=>{const s=t.response?.data?.message||"Failed to update product";p.error(s),console.error("Update product error:",t)}})}function S(){return P({mutationFn:async t=>{let s=t.existingImages||[];if(t.imageFiles&&t.imageFiles.length>0){const a=await Promise.all(t.imageFiles.map(i=>g.uploadProductImages([i]).then(n=>n[0]).catch(n=>{throw console.error("Failed to upload product image:",n),p.error("Failed to upload product image"),n})));s=[...s,...a]}let r=t.variants;if(t.variantFiles&&t.variantFiles.length>0&&r){const a=new Map;for(const i of t.variantFiles)if(i.files.length>0)try{const n=await g.uploadProductImages(i.files);a.set(i.variantIndex,n)}catch(n){console.error("Failed to upload variant images:",n)}r=r.map((i,n)=>{const y=a.get(n);return y?{...i,images:y}:i})}const{imageFiles:o,variantFiles:d,existingImages:u,id:v,...e}=t,l={title:e.title,images:s,isDraft:!0,outOfStock:e.outOfStock,...e.price&&{price:Number(e.price)},...e.priceType&&{priceType:e.priceType},...e.description&&{description:e.description},...e.category&&{category:e.category},...e.subCategory&&{subCategory:e.subCategory},...e.quantity!==void 0&&{quantity:Number(e.quantity)},...e.brand&&{brand:e.brand},...e.color&&{color:e.color},...e.locationIds&&{locationIds:e.locationIds},...e.productTag&&{productTag:e.productTag},...e.marketplaceOptions&&{marketplaceOptions:e.marketplaceOptions},...e.pickupHours&&{pickupHours:e.pickupHours},...e.deliveryDistance&&{deliveryDistance:Number(e.deliveryDistance)},...e.localDeliveryFree&&{localDeliveryFree:e.localDeliveryFree},...e.shippingPrice&&{shippingPrice:Number(e.shippingPrice)},...e.readyByDays&&{readyByDays:Number(e.readyByDays)},...e.dimensions&&{dimensions:{width:e.dimensions.width?Number(e.dimensions.width):void 0,length:e.dimensions.length?Number(e.dimensions.length):void 0,height:e.dimensions.height?Number(e.dimensions.height):void 0}},...e.discount&&{discount:{...e.discount,discountValue:e.discount.discountValue?Number(e.discount.discountValue):void 0}},...r&&{variants:r.map(a=>({color:a.color,price:Number(a.price),quantity:Number(a.quantity),priceType:a.priceType,outOfStock:a.outOfStock,images:a.images||a.existingImages,discount:{...a.discount,discountValue:a.discount.discountValue?Number(a.discount.discountValue):void 0}}))}};return v?await g.updateDraft(v,l):await g.saveDraft(l)},onSuccess:(t,s)=>{c.invalidateQueries({queryKey:m}),s.id&&c.invalidateQueries({queryKey:["product","id",s.id]}),p.success(t.message||"Draft saved successfully")},onError:t=>{const s=t.response?.data?.message||"Failed to save draft";p.error(s),console.error("Save draft error:",t)}})}function N(){return P({mutationFn:t=>g.deleteProduct(t),onSuccess:t=>{c.invalidateQueries({queryKey:m}),p.success(t.message||"Product deleted successfully")},onError:t=>{const s=t.response?.data?.message||"Failed to delete product";p.error(s),console.error("Delete product error:",t)}})}function T(){return P({mutationFn:({id:t,status:s})=>g.toggleProductStatus(t,s),onMutate:async({id:t,status:s})=>{await c.cancelQueries({queryKey:m});const r=c.getQueryData(m);return c.setQueryData(m,o=>o&&{...o,data:{...o.data,products:o.data.products?.map(d=>d._id===t||d.id===t?{...d,status:s}:d)}}),{previousProducts:r}},onError:(t,s,r)=>{r?.previousProducts&&c.setQueryData(m,r.previousProducts);const o=t.response?.data?.message||"Failed to update product status";p.error(o)},onSuccess:()=>{p.success("Product status updated successfully")},onSettled:()=>{c.invalidateQueries({queryKey:m})}})}function Q(){return P({mutationFn:({id:t,quantity:s,variants:r,outOfStock:o})=>g.updateProductStock(t,{quantity:s,variants:r,outOfStock:o}),onMutate:async({id:t,quantity:s,outOfStock:r})=>{await c.cancelQueries({queryKey:m});const o=c.getQueryData(m);return c.setQueryData(m,d=>d&&{...d,data:{...d.data,products:d.data.products?.map(u=>{if(u._id===t||u.id===t){const v=s===0?"out_of_stock":u.status==="out_of_stock"?"active":u.status;return{...u,quantity:s,status:v}}return u})}}),{previousProducts:o}},onError:(t,s,r)=>{r?.previousProducts&&c.setQueryData(m,r.previousProducts);const o=t.response?.data?.message||"Failed to update product stock";p.error(o)},onSuccess:()=>{p.success("Product stock updated successfully")},onSettled:()=>{c.invalidateQueries({queryKey:m}),c.invalidateQueries({queryKey:["product"]})}})}function k(t){return F({queryKey:[...m,t],queryFn:()=>g.getProducts(t),staleTime:300*1e3,gcTime:600*1e3})}function V(t){return console.log("slug-1",t),F({queryKey:b(t),queryFn:()=>g.getProductBySlug(t),enabled:!!t,staleTime:300*1e3,gcTime:600*1e3})}function K(t){return F({queryKey:["product","id",t],queryFn:()=>g.getProductById(t),enabled:!!t})}export{N as a,D as b,S as c,K as d,q as e,V as f,T as g,Q as h,g as p,k as u};
