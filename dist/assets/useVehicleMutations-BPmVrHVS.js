import{E as u,a3 as g,z as n,G as c,a4 as y}from"./index-CUSVstqU.js";import{v as i}from"./vehicleService-DvBLmtkJ.js";const r=["vehicles"],m=e=>["vehicle",e];function Q(){return u({mutationFn:async e=>{const[s,a]=await Promise.all([i.uploadVehicleImages(e.vehicleImageFiles),i.uploadInsuranceImages(e.insuranceImageFiles)]);if(s.length===0)throw new Error("Failed to upload vehicle images. Please try again.");const l={vehicleType:e.vehicleType,vehicleManufacturer:e.vehicleManufacturer,vehicleModel:e.vehicleModel,vehicleRegistrationNumber:e.vehicleRegistrationNumber,vehicleImages:s,insuranceImages:a};return await i.createVehicle(l)},onSuccess:e=>{c.invalidateQueries({queryKey:r}),c.invalidateQueries({queryKey:y}),n.success(e.message||"Vehicle information submitted successfully!")},onError:e=>{const s=e.response?.data?.message||e.message||"Failed to submit vehicle information";n.error(s),console.error("Error submitting vehicle information:",e)}})}function q(){return u({mutationFn:async e=>{let s=e.existingVehicleImages||[],a=e.existingInsuranceImages||[];const l=[];if(e.vehicleImageFiles&&e.vehicleImageFiles.length>0&&l.push(i.uploadVehicleImages(e.vehicleImageFiles)),e.insuranceImageFiles&&e.insuranceImageFiles.length>0&&l.push(i.uploadInsuranceImages(e.insuranceImageFiles)),l.length>0){const t=await Promise.all(l);let o=0;e.vehicleImageFiles&&e.vehicleImageFiles.length>0&&(s=[...s,...t[o++]]),e.insuranceImageFiles&&e.insuranceImageFiles.length>0&&(a=[...a,...t[o]])}const{id:h,vehicleImageFiles:d,insuranceImageFiles:p,existingVehicleImages:F,existingInsuranceImages:f,...I}=e,v={...I,vehicleImages:s,insuranceImages:a};return await i.updateVehicle(h,v)},onSuccess:e=>{c.invalidateQueries({queryKey:r}),c.invalidateQueries({queryKey:m(e.data.id)}),n.success(e.message||"Vehicle updated successfully!")},onError:e=>{const s=e.response?.data?.message||e.message||"Failed to update vehicle";n.error(s),console.error("Error updating vehicle:",e)}})}function K(){return u({mutationFn:e=>i.deleteVehicle(e),onSuccess:e=>{c.invalidateQueries({queryKey:r}),n.success(e.message||"Vehicle deleted successfully!")},onError:e=>{const s=e.response?.data?.message||e.message||"Failed to delete vehicle";n.error(s),console.error("Error deleting vehicle:",e)}})}function U(e){return g({queryKey:[...r,e],queryFn:()=>i.getVehicles(e),staleTime:300*1e3,gcTime:600*1e3})}function M(e){return g({queryKey:m(e),queryFn:()=>i.getVehicleById(e),enabled:!!e})}export{r as V,M as a,q as b,U as c,K as d,Q as u};
