import{K as n,J as u,t as i,z as o,w as m}from"./index-BiCr9dd_.js";var p=(e=>(e.TERMS_CONDITIONS="terms_conditions",e.PRIVACY_POLICY="privacy_policy",e.ABOUT_US="about_us",e))(p||{});class l{async createOrUpdateContent(s){return(await n.post("/cms/manage",s)).data}async getAllContent(){return(await n.get("/cms/manage")).data}async getContent(s){return(await n.get(`/cms/manage/${s}`)).data}async updateContent(s,t){return(await n.put(`/cms/manage/${s}`,t)).data}async deleteContent(s){return(await n.delete(`/cms/manage/${s}`)).data}async getPublicContent(s,t){return(await n.get(`/cms/public/${s}/${t}`)).data}async getAllPublicContent(s){return(await n.get(`/cms/public/${s}`)).data}}const a=new l,r=["cms"];function g(e){return u({queryKey:e?[...r,e]:r,queryFn:()=>e?a.getContent(e):a.getAllContent(),staleTime:300*1e3,gcTime:600*1e3})}function d(){return i({mutationFn:e=>a.createOrUpdateContent(e),onSuccess:async(e,s)=>{await m.invalidateQueries({queryKey:[...r,s.type]}),o.success(e.message||"Content saved successfully")},onError:e=>{const s=e.response?.data?.message||"Failed to save content";o.error(s),console.error("Save CMS content error:",e)}})}export{p as C,d as a,g as u};
