import{G as t,a2 as o}from"./index-BCiIUrXb.js";class c{async createVehicle(e){return(await t.post("/driver/vehicles",e)).data}async updateVehicle(e,s){return(await t.put(`/driver/vehicles/${e}`,s)).data}async getVehicles(){return(await t.get("/driver/vehicles")).data}async getVehicleById(e){return(await t.get(`/driver/vehicles/${e}`)).data}async deleteVehicle(e){return(await t.delete(`/driver/vehicles/${e}`)).data}async restoreVehicle(e){return(await t.patch(`/driver/vehicles/${e}/restore`)).data}async uploadVehicleImages(e){if(e.length===0)return[];const s=e.map(async a=>{try{const r=await o.uploadFile(a);if(r.status==="success"&&r.data.url)return r.data.url;throw new Error("Upload failed")}catch(r){return console.error(`Failed to upload image: ${a.name}`,r),null}});return(await Promise.all(s)).filter(a=>a!==null)}async uploadInsuranceImages(e){if(e.length===0)return[];const s=e.map(async a=>{try{const r=await o.uploadFile(a);if(r.status==="success"&&r.data.url)return r.data.url;throw new Error("Upload failed")}catch(r){return console.error(`Failed to upload insurance document: ${a.name}`,r),null}});return(await Promise.all(s)).filter(a=>a!==null)}}const u=new c;export{u as v};
