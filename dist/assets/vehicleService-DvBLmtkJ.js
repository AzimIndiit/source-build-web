import{n as t,a5 as o}from"./index-CUSVstqU.js";class c{async createVehicle(e){return(await t.post("/driver/vehicles",e)).data}async createLicense(e){return(await t.post("/driver/license",e)).data}async updateVehicle(e,r){return(await t.put(`/driver/vehicles/${e}`,r)).data}async getVehicles(e){return(await t.get("/driver/vehicles",{params:e})).data}async getVehicleById(e){return(await t.get(`/driver/vehicles/${e}`)).data}async deleteVehicle(e){return(await t.delete(`/driver/vehicles/${e}`)).data}async restoreVehicle(e){return(await t.patch(`/driver/vehicles/${e}/restore`)).data}async uploadVehicleImages(e){if(e.length===0)return[];const r=e.map(async a=>{try{const s=await o.uploadFile(a);if(s.status==="success"&&s.data.url)return s.data.url;throw new Error("Upload failed")}catch(s){return console.error(`Failed to upload image: ${a.name}`,s),null}});return(await Promise.all(r)).filter(a=>a!==null)}async uploadInsuranceImages(e){if(e.length===0)return[];const r=e.map(async a=>{try{const s=await o.uploadFile(a);if(s.status==="success"&&s.data.url)return s.data.url;throw new Error("Upload failed")}catch(s){return console.error(`Failed to upload insurance document: ${a.name}`,s),null}});return(await Promise.all(r)).filter(a=>a!==null)}}const u=new c;export{u as v};
